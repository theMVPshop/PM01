{"ast":null,"code":"var _jsxFileName = \"/Users/acaclasswork/Documents/PM01/react/src/components/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Button, Table } from \"react-bootstrap\";\nimport SetRolesModal from \"../components/SetRolesModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Projects({\n  currentUser,\n  localStorageCurrentUser\n}) {\n  _s();\n\n  const [projects, setProjects] = useState([]);\n  const [permissions, setPermissions] = useState([]);\n  const [counter, setCounter] = useState(1);\n  const [input, setInput] = useState({\n    id: counter,\n    title: \"\",\n    description: \"\"\n  });\n  const [isMod, setIsMod] = useState(false);\n  React.useEffect(() => {\n    // if someone is logged in, this will check to see if they are a moderator and store it in a useState hook (line 15) as a boolean\n    localStorageCurrentUser && axios.get(\"http://localhost:4001/users\").then(response => {\n      setIsMod(response.data.find(x => x.username === localStorageCurrentUser).isModerator === 0 ? false : true);\n      console.log(\"isMod\", isMod);\n    }); // fetch permissions table from API and store in hook\n\n    axios.get(\"http://localhost:4001/permissions\").then(response => {\n      setPermissions(response.data);\n    }); // fetch projects table from API and store in hook\n\n    axios.get(\"http://localhost:4001/projects/\").then(response => {\n      setProjects(response.data);\n    });\n  }, []); // controls all the input fields in the add project form\n\n  const onChange = event => {\n    setInput(prevState => ({ ...prevState,\n      [event.target.name]: event.target.value\n    }));\n  }; // creates new project and stores it in hook and also the API\n\n\n  const onSubmit = event => {\n    event.preventDefault();\n    let project = {\n      id: counter,\n      title: input.title,\n      description: input.description\n    };\n    setProjects([...projects, project]);\n    setCounter(counter + 1);\n    setInput({\n      title: \"\",\n      description: \"\"\n    });\n    axios.post(`http://localhost:4001/projects`, project).then(function (response) {\n      console.log(\"post project response\", response);\n    }).catch(function (error) {\n      console.log(\"post project error\", error);\n    });\n  }; // unfinished code to remove project\n\n\n  const removeProject = idx => {\n    let id = projects[idx].id;\n    console.log(\"delete project: \", id);\n    axios.delete(`http://localhost:4001/projects/${id}`); // .then(response => response.json())\n    // .then(data => console.log('deleted project: ', data.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isMod && /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex p-6 justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          style: {\n            flex: \"10\",\n            padding: \"5px\"\n          },\n          placeholder: \"Title ...\",\n          value: input.title,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          style: {\n            flex: \"10\",\n            padding: \"5px\"\n          },\n          placeholder: \"Description ...\",\n          value: input.description,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          value: \"Submit\",\n          className: \"btn\",\n          style: {\n            flex: \"1\"\n          },\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"d-flex p-6 justify-content-center\",\n          children: isMod && /*#__PURE__*/_jsxDEV(SetRolesModal, {\n            projects: projects\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Project Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Project Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: permissions.map((permission, idx) => projects.filter(x => x.id === permission.project_id && permission.username === localStorageCurrentUser).map((project, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Projects, \"04R40w27BdXc38KzcSdWPo02CZ4=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/acaclasswork/Documents/PM01/react/src/components/Projects.js"],"names":["React","useState","axios","Container","Button","Table","SetRolesModal","Projects","currentUser","localStorageCurrentUser","projects","setProjects","permissions","setPermissions","counter","setCounter","input","setInput","id","title","description","isMod","setIsMod","useEffect","get","then","response","data","find","x","username","isModerator","console","log","onChange","event","prevState","target","name","value","onSubmit","preventDefault","project","post","catch","error","removeProject","idx","delete","flex","padding","map","permission","filter","project_id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Button, Table } from \"react-bootstrap\";\nimport SetRolesModal from \"../components/SetRolesModal\";\n\nfunction Projects({ currentUser, localStorageCurrentUser }) {\n  const [projects, setProjects] = useState([]);\n  const [permissions, setPermissions] = useState([]);\n  const [counter, setCounter] = useState(1);\n  const [input, setInput] = useState({\n    id: counter,\n    title: \"\",\n    description: \"\",\n  });\n  const [isMod, setIsMod] = useState(false);\n\n  React.useEffect(() => {\n    // if someone is logged in, this will check to see if they are a moderator and store it in a useState hook (line 15) as a boolean\n    localStorageCurrentUser &&\n      axios.get(\"http://localhost:4001/users\").then((response) => {\n        setIsMod(\n          response.data.find((x) => x.username === localStorageCurrentUser)\n            .isModerator === 0\n            ? false\n            : true\n        );\n        console.log(\"isMod\", isMod);\n      });\n    // fetch permissions table from API and store in hook\n    axios.get(\"http://localhost:4001/permissions\").then((response) => {\n      setPermissions(response.data);\n    });\n    // fetch projects table from API and store in hook\n    axios.get(\"http://localhost:4001/projects/\").then((response) => {\n      setProjects(response.data);\n    });\n  }, []);\n\n  // controls all the input fields in the add project form\n  const onChange = (event) => {\n    setInput((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  // creates new project and stores it in hook and also the API\n  const onSubmit = (event) => {\n    event.preventDefault();\n    let project = {\n      id: counter,\n      title: input.title,\n      description: input.description,\n    };\n    setProjects([...projects, project]);\n    setCounter(counter + 1);\n    setInput({\n      title: \"\",\n      description: \"\",\n    });\n    axios\n      .post(`http://localhost:4001/projects`, project)\n      .then(function (response) {\n        console.log(\"post project response\", response);\n      })\n      .catch(function (error) {\n        console.log(\"post project error\", error);\n      });\n  };\n\n  // unfinished code to remove project\n  const removeProject = (idx) => {\n    let id = projects[idx].id;\n    console.log(\"delete project: \", id);\n    axios.delete(`http://localhost:4001/projects/${id}`);\n    // .then(response => response.json())\n    // .then(data => console.log('deleted project: ', data.id));\n  };\n\n  return (\n    <>\n      {/* add project form begins below */}\n      {isMod && (\n        <Container className=\"d-flex p-6 justify-content-center\">\n          <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              name=\"title\"\n              style={{ flex: \"10\", padding: \"5px\" }}\n              placeholder=\"Title ...\"\n              value={input.title}\n              onChange={onChange}\n            />\n            <input\n              type=\"text\"\n              name=\"description\"\n              style={{ flex: \"10\", padding: \"5px\" }}\n              placeholder=\"Description ...\"\n              value={input.description}\n              onChange={onChange}\n            />\n            <Button\n              type=\"submit\"\n              value=\"Submit\"\n              className=\"btn\"\n              style={{ flex: \"1\" }}\n            >\n              Add Project\n            </Button>\n            <Container className=\"d-flex p-6 justify-content-center\">\n              {isMod && <SetRolesModal projects={projects} />}\n            </Container>\n          </form>\n        </Container>\n      )}\n      {/* form ends above and table begins below */}\n      <Container>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>ID#</th>\n              <th>Project Title</th>\n              <th>Project Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* (below) maps over permissions table to filter projects assigned to current user and render them in the table */}\n            {permissions.map((permission, idx) =>\n              projects\n                .filter(\n                  (x) =>\n                    x.id === permission.project_id &&\n                    permission.username === localStorageCurrentUser\n                )\n                .map((project, idx) => (\n                  <tr>\n                    <td>{project.id}</td>\n                    <td>{project.title}</td>\n                    <td>{project.description}</td>\n                  </tr>\n                ))\n            )}\n          </tbody>\n        </Table>\n      </Container>\n    </>\n  );\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}